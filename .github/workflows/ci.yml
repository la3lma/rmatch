name: CI
on:
  pull_request:
  push:
#    branches:
#      - main
#      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # Dropping macos latest
        java: [21]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: maven

      - name: Cache Maven repo
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Prepare runner (pin CPU governor)
        if: runner.os == 'Linux'
        run: |
          sudo bash -c 'for c in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor; do echo performance > $c; done' || true
      - name: Build
        run: ./mvnw -q -B -DskipTests install
      - name: Spotless check
        run: ./mvnw -q -B spotless:check
      - name: Run JMH
        run: make bench-micro # outputs jmh-result.json
      - name: Run Macro Benchmark
        run: make bench-macro # outputs macro-result.json

# TODO: Make some steps to install asprof, then we can run this thing
#      - name: Profile hot path
#        run: make profile  # outputs *.svg

      - name: Compare vs baseline and comment
        run: ./scripts/compare_and_comment.sh  # uses GH_TOKEN to post PR comment
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: perf-artifacts
          path: |
            benchmarks/results/jmh-*.json
            benchmarks/results/macro-*.json
            benchmarks/results/*.txt
            profiles/*.svg
          retention-days: 14   # optional

## Eventually get  to this too.
#      # Install async-profiler and put asprof on PATH
#      - name: Install async-profiler (asprof)
#        run: |
#          set -euxo pipefail
#          curl -L -o /tmp/ap.tar.gz \
#            https://github.com/async-profiler/async-profiler/releases/download/v${AP_VERSION}/async-profiler-${AP_VERSION}-linux-x64.tar.gz
#          mkdir -p "$HOME/ap"
#          tar -xzf /tmp/ap.tar.gz -C "$HOME/ap" --strip-components=1
#          echo "$HOME/ap/bin" >> "$GITHUB_PATH"
#          asprof --version
#
#      # Allow perf events from non-root & readable kernel symbols
#      - name: Loosen perf permissions
#        run: |
#          echo 1 | sudo tee /proc/sys/kernel/perf_event_paranoid
#          echo 0 | sudo tee /proc/sys/kernel/kptr_restrict
#
#      # Quick compile & tests (optional but recommended)
#      - name: Build & test
#        run: ./mvnw -q -B -Dspotbugs.skip=true verify
#
#      # Run the macro benchmark and profile it with async-profiler
#      - name: Profile macro benchmark with async-profiler
#        shell: bash
#        run: |
#          set -euo pipefail
#          # Keep the run short for CI; adjust as you like
#          export MAX_REGEXPS=5000
#          export DUR=20
#          scripts/profile_async_profiler.sh
#
#      - name: Upload profiles and logs
#        uses: actions/upload-artifact@v4
#        with:
#          name: perf-artifacts
#          path: |
#            profiles/*.svg
#            benchmarks/results/macro-*.json
#            benchmarks/results/macro-*.log



#      - name: Build & install
#        run: ./mvnw -q -B package

#      - name: Macro test
#        run: make bench-macro

## TODO: Enable these later
#      - name: Spotless check
#        run: ./mvnw -q -B spotless:check

#      - name: SpotBugs
#        run: ./mvnw -q -B spotbugs:check

#      - name: Upload reports
#        uses: actions/upload-artifact@v4
#        with:
#          name: reports
#          path: |
#            **/target/site/**
#            **/build/reports/**
