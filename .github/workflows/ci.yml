name: CI
on:
  pull_request:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # Dropping macos latest
        java: [21]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: maven

      - name: Cache Maven repo
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Prepare runner (pin CPU governor)
        if: runner.os == 'Linux'
        run: |
          sudo bash -c 'for c in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor; do echo performance > $c; done' || true
      - name: Build
        run: ./mvnw -q -B -DskipTests package || ./gradlew -q build -x test
      - name: Run JMH
        run: ./scripts/run_jmh.sh  # outputs jmh-result.json
      - name: Run Macro Benchmark
        run: ./scripts/run_macro.sh  # outputs macro-result.json
      - name: Profile hot path
        run: ./scripts/profile_async_profiler.sh  # outputs *.svg
      - name: Compare vs baseline and comment
        run: ./scripts/compare_and_comment.sh  # uses GH_TOKEN to post PR comment
      - uses: actions/upload-artifact@v4
        with: { name: perf-artifacts, path: "jmh-result.json macro-result.json profiles/*.svg" }


#      - name: Build & install
#        run: ./mvnw -q -B package

#      - name: Macro test
#        run: make bench-macro

## TODO: Enable these later
#      - name: Spotless check
#        run: ./mvnw -q -B spotless:check

#      - name: SpotBugs
#        run: ./mvnw -q -B spotbugs:check

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/target/site/**
            **/build/reports/**
