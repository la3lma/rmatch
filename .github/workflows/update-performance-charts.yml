name: Update Performance Charts

on:
  push:
    branches: [main, master]
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *"  # Daily at 6 AM UTC

jobs:
  update-charts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Need full history for performance data
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt
      
      - name: Generate performance charts
        run: |
          echo "Generating performance evolution charts..."
          python3 scripts/generate_performance_charts.py || echo "Performance trend charts skipped"
          
          echo "Generating macro performance timeline chart..."
          python3 scripts/generate_macro_performance_plot.py || echo "rmatch timeline chart skipped"
          
          echo "Generating Java regex performance timeline chart..."
          python3 scripts/generate_java_performance_plot.py || echo "Java regex timeline chart skipped"
          
          echo "Generating performance comparison chart..."
          python3 scripts/generate_performance_comparison_plot.py || echo "Performance comparison chart generation skipped"
          
          echo "Updating README.md performance comparison table..."
          python3 scripts/update_readme_performance_table.py || echo "README table update skipped"
          
          # Check if charts were generated
          if [ -f "charts/performance_trend.png" ]; then
            echo "Performance trend chart generated successfully"
            ls -la charts/
          else
            echo "Warning: No performance trend chart was generated"
          fi
          
          if [ -f "performance_timeline.png" ]; then
            echo "rmatch performance timeline chart generated successfully"
            ls -la performance_timeline.png
          else
            echo "Warning: No rmatch performance timeline chart was generated"
          fi
          
          if [ -f "java_performance_timeline.png" ]; then
            echo "Java regex performance timeline chart generated successfully"
            ls -la java_performance_timeline.png
          else
            echo "Warning: No Java regex performance timeline chart was generated"
          fi
      
      - name: Check for changes
        id: check-changes
        run: |
          git add charts/ performance_timeline.png java_performance_timeline.png performance_comparison.png
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in charts"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit updated charts
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add charts/ performance_timeline.png java_performance_timeline.png performance_comparison.png
          git commit -m "chore: update performance charts

          Auto-generated performance evolution, rmatch timeline, Java regex timeline, and comparison charts
          
          [skip ci]"
          git push