# .github/workflows/perf.yml
name: Performance
on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"  # nightly
jobs:
  perf:
    runs-on: self-hosted  # prefer; fall back to ubuntu-latest if needed
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: 'temurin', java-version: 21 }
      - name: Prepare runner (pin CPU governor)
        if: runner.os == 'Linux'
        run: |
          sudo bash -c 'for c in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor; do echo performance > $c; done' || true
      - name: Build
        run: ./mvnw -q -B -DskipTests package || ./gradlew -q build -x test
      - name: Run JMH
        run: ./scripts/run_jmh.sh  # outputs jmh-result.json
      - name: Run Macro Benchmark with Memory Tracking
        run: ./scripts/run_macro_with_memory.sh  # outputs macro-result.json with memory data
      - name: Run Java Regex Benchmark with Memory Tracking
        run: ./scripts/run_java_benchmark_with_memory.sh  # outputs java-result.json with memory data
      - name: Generate performance timelines and update README
        run: |
          # Install Python dependencies if needed
          python3 -m pip install --user matplotlib pandas numpy || true
          # Generate rmatch timeline chart
          python3 scripts/generate_macro_performance_plot.py || echo "rmatch chart generation skipped"
          # Generate Java regex timeline chart
          python3 scripts/generate_java_performance_plot.py || echo "Java regex chart generation skipped"
          # Generate performance comparison chart (rmatch vs Java ratios)
          python3 scripts/generate_performance_comparison_plot.py || echo "Performance comparison chart generation skipped"
          # Update README.md performance table
          python3 scripts/update_readme_performance_table.py || echo "README table update skipped"
      - name: Profile hot path
        run: ./scripts/profile_async_profiler.sh  # outputs *.svg
      - name: Compare vs baseline and comment
        env:
          GITHUB_TOKEN: ${{ secrets.REPORT_TOKEN || secrets.GITHUB_TOKEN }}
        run: ./scripts/compare_and_comment.sh  # uses GH_TOKEN to post PR comment
      - uses: actions/upload-artifact@v4
        with: { name: perf-artifacts, path: "jmh-result.json macro-result.json profiles/*.svg performance_timeline.png java_performance_timeline.png performance_comparison.png" }
